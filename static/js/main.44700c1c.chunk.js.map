{"version":3,"sources":["components/PageContainer/PageContainer.js","constants/iconSize.js","components/Button/Button.js","context/theme.js","components/PalettePicker/PalettePicker.js","App.js","index.js"],"names":["PageContainer","styled","div","iconSize","Object","freeze","sm","StyledButton","button","props","theme","colors","secondary","primary","success","Button","Icon","icon","children","size","DEFAULT_THEME","error","warning","info","common","white","black","text","ThemeContext","createContext","undefined","ThemeProvider","useState","setTheme","updateTheme","useCallback","changes","currentTheme","merge","resetTheme","contextValue","useMemo","Provider","value","PalettePicker","context","useContext","Error","useTheme","useColor","pColor","setPColor","sColor","setSColor","onClick","style","display","gap","width","height","color","onChange","hex","hideHSV","dark","App","FaAddressBook","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAEaA,EAAgBC,IAAOC,IAAV,8CCFbC,EAAWC,OAAOC,OAAO,CACpCC,GAAI,K,OCEOC,EAAeN,IAAOO,OAAV,8aAUd,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,aACjB,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,OAAOE,WAI1B,SAAAJ,GAAK,OAAIA,EAAMC,MAAMC,OAAOG,WAOvCC,EAAS,SAAC,GAA8B,IAAtBC,EAAqB,EAA3BC,KAAYC,EAAe,EAAfA,SACnC,OACE,eAACX,EAAD,WACGS,GAAQ,cAACA,EAAD,CAAMG,KAAMhB,EAASG,KAC7BY,M,+CCzBDE,EAAgBhB,OAAOC,OAAO,CAClCM,OAAQ,CACNE,QAAS,UACTD,UAAW,UACXS,MAAO,UACPC,QAAS,UACTC,KAAM,UACNT,QAAS,UACTU,OAAQ,CACNC,MAAO,UACPC,MAAO,WAETC,KAAM,CACJd,QAAS,UACTD,UAAW,cAKJgB,EAAeC,6BAAcC,GAU7BC,EAAgB,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAC9B,EAA0Bc,mBAASZ,GAAnC,mBAAOV,EAAP,KAAcuB,EAAd,KAMMC,EAAcC,uBAAY,SAAAC,GAC9BH,GAAS,SAAAI,GAAY,OAAIC,IAAM,GAAID,EAAcD,QAChD,IAEGG,EAAaJ,uBAAY,kBAAMF,EAASb,KAAgB,IAExDoB,EAAeC,mBACnB,iBAAO,CAAE/B,QAAOwB,cAAaK,gBAC7B,CAACA,EAAY7B,EAAOwB,IAGtB,OACE,cAACN,EAAac,SAAd,CAAuBC,MAAOH,EAA9B,SACE,cAAC,IAAD,CAAiB9B,MAAOA,EAAxB,SAAgCQ,OClDzB0B,EAAgB,WAC3B,MDqBsB,WACtB,IAAMC,EAAUC,qBAAWlB,GAC3B,QAAgBE,IAAZe,EACF,MAAM,IAAIE,MAAM,qDAElB,OAAOF,EC1BoCG,GAAnCtC,EAAR,EAAQA,MAAOwB,EAAf,EAAeA,YAAaK,EAA5B,EAA4BA,WAC5B,EAA4BU,YAAS,MAAOvC,EAAMC,OAAOE,SAAzD,mBAAOqC,EAAP,KAAeC,EAAf,KACA,EAA4BF,YAAS,MAAOvC,EAAMC,OAAOC,WAAzD,mBAAOwC,EAAP,KAAeC,EAAf,KAgBA,OACE,qCACE,wBAAQC,QAASf,EAAjB,yBACA,sBAAKgB,MAAO,CAAEC,QAAS,OAAQC,IAAK,IAApC,UACE,gCACE,wCACS,kDADT,YAGA,cAAC,IAAD,CACEC,MAAO,IACPC,OAAQ,IACRC,MAAOV,EACPW,SA1BiB,SAAAD,GACzBT,EAAUS,GACV1B,EAAY,CACVvB,OAAQ,CAAEE,QAAS+C,EAAME,QAwBnBC,SAAO,EACPC,MAAI,OAIR,gCACE,wCACS,4CADT,YAGA,cAAC,IAAD,CACEN,MAAO,IACPC,OAAQ,IACRC,MAAOR,EACPS,SAjCmB,SAAAD,GAC3BP,EAAUO,GACV1B,EAAY,CACVvB,OAAQ,CAAEC,UAAWgD,EAAME,QA+BrBC,SAAO,EACPC,MAAI,c,cC9BDC,MAXf,WACE,OACE,cAAC,EAAD,UACA,eAACjE,EAAD,WACE,cAAC,EAAD,CAAQiB,KAAMiD,IAAd,0BACA,cAAC,EAAD,UCRNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.44700c1c.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const PageContainer = styled.div`\r\n  padding: 24px;\r\n`;","export const iconSize = Object.freeze({\r\n  sm: 16,\r\n});","import styled from '@emotion/styled';\r\nimport { iconSize } from '../../constants';\r\n\r\nexport const StyledButton = styled.button`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  margin: 0;\r\n  margin-right:5px;\r\n  border-radius:5px;  \r\n  padding: 16px 24px;\r\n  border: 1px solid black;\r\n  box-shadow: 6px 7px 8px rgb(85, 42, 85);\r\n  border-radius: 5px;\r\n  color: ${props => props.theme.colors.secondary};\r\n  background-color: ${props => props.theme.colors.primary};\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n  :hover {\r\n    background-color: ${props => props.theme.colors.success};\r\n  }\r\n  > svg {\r\n    margin-right: 8px;\r\n  }\r\n`;\r\n\r\nexport const Button = ({ icon: Icon, children }) => {\r\n  return (\r\n    <StyledButton>\r\n      {Icon && <Icon size={iconSize.sm} />}\r\n      {children}\r\n    </StyledButton>\r\n  );\r\n};\r\n","import { createContext, useContext, useState, useCallback, useMemo } from 'react';\r\nimport { ThemeProvider as EmotionProvider } from '@emotion/react';\r\nimport merge from 'lodash.merge';\r\n\r\nconst DEFAULT_THEME = Object.freeze({\r\n  colors: {\r\n    primary: '#1976d2',\r\n    secondary: '#ffffff',\r\n    error: '#f44336',\r\n    warning: '#ff9800',\r\n    info: '#2196f3',\r\n    success: '#4caf50',\r\n    common: {\r\n      white: '#ffffff',\r\n      black: '#000000',\r\n    },\r\n    text: {\r\n      primary: '#212121',\r\n      secondary: '#757575',\r\n    },\r\n  },\r\n});\r\n\r\nexport const ThemeContext = createContext(undefined);\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (context === undefined) {\r\n    throw new Error('useTheme was called outside ThemeContext.Provider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [theme, setTheme] = useState(DEFAULT_THEME);\r\n\r\n  // Put in localstorage\r\n  // useEffect(() => {\r\n  // }, [theme]);\r\n\r\n  const updateTheme = useCallback(changes => {\r\n    setTheme(currentTheme => merge({}, currentTheme, changes));\r\n  }, []);\r\n\r\n  const resetTheme = useCallback(() => setTheme(DEFAULT_THEME), []);\r\n\r\n  const contextValue = useMemo(\r\n    () => ({ theme, updateTheme, resetTheme }),\r\n    [resetTheme, theme, updateTheme],\r\n  );\r\n\r\n  return (\r\n    <ThemeContext.Provider value={contextValue}>\r\n      <EmotionProvider theme={theme}>{children}</EmotionProvider>\r\n    </ThemeContext.Provider>\r\n  );\r\n};","import { ColorPicker, useColor } from 'react-color-palette';\r\nimport 'react-color-palette/lib/css/styles.css';\r\nimport { useTheme } from '../../context/theme';\r\nexport const PalettePicker = () => {\r\n  const { theme, updateTheme, resetTheme } = useTheme();\r\n  const [pColor, setPColor] = useColor('hex', theme.colors.primary);\r\n  const [sColor, setSColor] = useColor('hex', theme.colors.secondary);\r\n\r\n  const updatePrimaryColor = color => {\r\n    setPColor(color);\r\n    updateTheme({\r\n      colors: { primary: color.hex },\r\n    });\r\n  };\r\n\r\n  const updateSecondaryColor = color => {\r\n    setSColor(color);\r\n    updateTheme({\r\n      colors: { secondary: color.hex },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button onClick={resetTheme}>Reset theme</button>\r\n      <div style={{ display: 'flex', gap: 20 }}>\r\n        <div>\r\n          <p>\r\n            Select <b>BUTTON BACKGROUND</b> color\r\n          </p>\r\n          <ColorPicker\r\n            width={300}\r\n            height={200}\r\n            color={pColor}\r\n            onChange={updatePrimaryColor}\r\n            hideHSV\r\n            dark\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <p>\r\n            Select <b>BUTTON TEXT</b> color\r\n          </p>\r\n          <ColorPicker\r\n            width={300}\r\n            height={200}\r\n            color={sColor}\r\n            onChange={updateSecondaryColor}\r\n            hideHSV\r\n            dark\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};","import { PageContainer } from './components/PageContainer/PageContainer';\nimport { Button } from './components/Button/Button';\nimport { PalettePicker } from './components/PalettePicker/PalettePicker';\nimport { FaAddressBook } from 'react-icons/fa';\nimport { ThemeProvider } from './context/theme';\n\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <ThemeProvider>\n    <PageContainer>\n      <Button icon={FaAddressBook}>Super button</Button>\n      <PalettePicker />\n      </PageContainer>\n      </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}